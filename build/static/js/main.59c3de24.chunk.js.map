{"version":3,"sources":["components/Display.js","App.js","index.js"],"names":["props","useState","countryData","setCountryData","dotsNumber","number","toString","replace","className","dataProps","country","length","country_code","latest","confirmed","deaths","province","country_population","App","newData","setNewData","loading","setLoading","loopSize","setLoopSize","useEffect","axios","method","url","then","res","data","href","date","onlyDate","slice","year","month","formatDateString","locations","last_updated","cardsDivs","i","push","key","Object","values","sort","a","b","generateDivs","onClick","target","rel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAIe,G,YAAA,SAACA,GAAW,IAAD,EACcC,oBAAS,GADvB,mBACjBC,EADiB,KACJC,EADI,KAGxB,SAASC,EAAWC,GAElB,OAAkB,OAAXA,EACHA,EAAOC,WAAWC,QAAQ,wBAAyB,KACnD,IAGN,OACE,yBAAKC,UAAU,gBACXN,GAAeC,EAAeH,EAAMS,WAErCP,GACC,oCACE,yBAAKM,UAAU,qBACZN,EAAYQ,QAAQC,OAAS,GAC5B,4BACGT,EAAYQ,QADf,KAC0BR,EAAYU,aADtC,KAIA,4BACGV,EAAYQ,QADf,KAC0BR,EAAYU,aADtC,MAKJ,yBAAKJ,UAAU,0BACb,2BACE,2CACCJ,EAAWF,EAAYW,OAAOC,YAEjC,6BACA,2BACE,4CADF,IAC6BV,EAAWF,EAAYW,OAAOE,SAEjC,KAAzBb,EAAYc,UACX,oCACE,6BACA,2BACE,qDACCZ,EAAWF,EAAYe,sBAM9B,6BAC0B,KAAzBf,EAAYc,UACX,2BACE,kDACCZ,EAAWF,EAAYc,gBCgDzBE,MAjGf,WAAgB,IAAD,EACiBjB,oBAAS,GAD1B,mBACNkB,EADM,KACGC,EADH,OAEiBnB,oBAAS,GAF1B,mBAENoB,EAFM,KAEGC,EAFH,OAGmBrB,mBAAS,GAH5B,mBAGNsB,EAHM,KAGIC,EAHJ,KAeb,SAASpB,EAAWC,GAClB,OAAkB,OAAXA,EACHA,EAAOC,WAAWC,QAAQ,wBAAyB,KACnD,IAiCN,OA9CAkB,qBAAU,WACRC,IAAM,CACJC,OAAQ,MACRC,IAAK,gFACJC,MAAK,SAACC,GACPV,EAAWU,EAAIC,MACfT,GAAW,QAEZ,IAuCD,yBAAKd,UAAU,OACb,gCACE,mCAAW,uBAAGwB,KAAK,KAAR,UAGXX,GAGE,oCACA,yBAAKb,UAAU,YAAW,8BAAW,8BAAW,iCAIlDa,GAEA,oCACE,yBAAKb,UAAU,gBACb,qCACA,2BACE,uDACCJ,EAAWe,EAAQN,OAAOC,YAE7B,2BACE,2CADF,IAC4BV,EAAWe,EAAQN,OAAOE,SAEtD,2BACE,iEAnCZ,SAA0BkB,GACxB,IAAIC,EAAWD,EAAKE,MAAM,GAAI,IAC1BC,EAAOF,EAASC,MAAM,GAAI,GAC1BE,EAAQH,EAASC,MAAM,GAAI,GAE/B,OADUD,EAASC,MAAM,EAAG,IACf,IAAME,EAAQ,IAAMD,EA+BtBE,CAAiBnB,EAAQoB,UAAU,GAAGC,gBAG3C,yBAAKhC,UAAU,SAnDvB,WAGE,IAFA,IAAIiC,EAAY,GAEPC,EAAI,EAAGA,EAAInB,EAAUmB,IAC5BD,EAAUE,KACR,kBAAC,EAAD,CAASC,IAAKF,EAAGjC,UAddoC,OAAOC,OAAO3B,EAAQoB,WAAWQ,MAAK,SAACC,EAAGC,GAAJ,OAC3CD,EAAEnC,OAAOC,UAAYmC,EAAEpC,OAAOC,UAAY,GAAK,KAaI4B,MAIrD,OAAOD,EA0CuBS,KAG5B,yBAAK1C,UAAU,iBACZe,EAAW,MAAmB,IAAZJ,GACjB,4BACEgC,QAAS,WA5Db5B,EAAW,EAAIJ,EAAQoB,UAAU5B,QAAQa,EAAYD,EAAW,KA2D9D,MAKJ,gCAAQ,+CAAoB,uBAAG6B,OAAO,SAASC,IAAI,sBAAsBrB,KAAK,iCAAlD,mBC5FlCsB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.59c3de24.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport './Display.css';\n\nexport default (props) => {\n  const [countryData, setCountryData] = useState(false);\n\n  function dotsNumber(number) {\n    // Adicionar pontos aos números\n    return number !== null\n      ? number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.')\n      : '?';\n  }\n\n  return (\n    <div className=\"cardDisplay\">\n      {!countryData && setCountryData(props.dataProps)}\n\n      {countryData /* Evita que chame locations undefined */ && (\n        <>\n          <div className=\"headerCardDisplay\">\n            {countryData.country.length < 12 ? (\n              <h2>\n                {countryData.country} ({countryData.country_code})\n              </h2>\n            ) : (\n              <h3>\n                {countryData.country} ({countryData.country_code})\n              </h3>\n            )}\n          </div>\n          <div className=\"informationCardDisplay\">\n            <p>\n              <strong>Casos: </strong>\n              {dotsNumber(countryData.latest.confirmed)}\n            </p>\n            <br />\n            <p>\n              <strong>Mortes: </strong> {dotsNumber(countryData.latest.deaths)}\n            </p>\n            {countryData.province === '' ? (\n              <>\n                <br />\n                <p>\n                  <strong>População: </strong>\n                  {dotsNumber(countryData.country_population)}\n                </p>\n              </>\n            ) : (\n              false\n            )}\n            <br />\n            {countryData.province !== '' ? (\n              <p>\n                <strong>Província: </strong>\n                {dotsNumber(countryData.province)}\n              </p>\n            ) : (\n              false\n            )}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport './App.css';\nimport Display from './components/Display';\n\nfunction App() {\n  const [newData, setNewData] = useState(false); // Recebe novos dados\n  const [loading, setLoading] = useState(true); // O dados estão carregando?\n  const [loopSize, setLoopSize] = useState(8);\n\n  useEffect(() => {\n    axios({\n      method: 'GET',\n      url: 'https://cors-anywhere.herokuapp.com/http://covid19api.xapix.io/v2/locations',\n    }).then((res) => {\n      setNewData(res.data);\n      setLoading(false); // Não está mais carregando\n    });\n  }, []);\n\n  function dotsNumber(number) {\n    return number !== null\n      ? number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.')\n      : '?';\n  }\n\n  function sortLocationsArray() {\n    return Object.values(newData.locations).sort((a, b) =>\n      a.latest.confirmed < b.latest.confirmed ? 1 : -1\n    );\n  }\n\n  function incLoopSize() {\n    if (loopSize + 8 < newData.locations.length) setLoopSize(loopSize + 8);\n  }\n\n  function generateDivs() {\n    var cardsDivs = [];\n\n    for (let i = 0; i < loopSize; i++) {\n      cardsDivs.push(\n        <Display key={i} dataProps={sortLocationsArray()[i]}></Display>\n      );\n    }\n\n    return cardsDivs;\n  }\n\n  function formatDateString(date) {\n    let onlyDate = date.slice(0, -17);\n    let year = onlyDate.slice(0, -6);\n    let month = onlyDate.slice(5, -3);\n    let day = onlyDate.slice(8, 10);\n    return day + '/' + month + '/' + year;\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <p>data</p><a href=\"/\">COVID</a>\n      </header>\n      {\n        loading &&\n        /* Tela de carregamento */\n        /* https://loading.io */\n          <>\n          <div className=\"lds-ring\"><div></div><div></div><div></div></div>\n          </>\n\n      }\n      {!loading && (\n        /* Carregou */\n        <>\n          <div className=\"displayWorld\">\n            <h2>Mundo</h2>\n            <p>\n              <strong>Casos confirmados: </strong>\n              {dotsNumber(newData.latest.confirmed)}\n            </p>\n            <p>\n              <strong>Mortes:</strong> {dotsNumber(newData.latest.deaths)}\n            </p>\n            <p>\n              <strong>Última atualização: </strong>\n              {formatDateString(newData.locations[0].last_updated)}\n            </p>\n          </div>\n          <div className=\"cards\">{generateDivs()}</div>\n        </>\n      )}\n      <div className=\"buttonPlusDiv\">\n        {loopSize < 260 && newData !== false? (\n          <button\n            onClick={() => {\n              incLoopSize();\n            }}>+</button>) : (false)}\n      </div>\n      <footer><p>Desenvolvido por <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/Lukenoutte\">@Lukenoutte</a></p></footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\";\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}