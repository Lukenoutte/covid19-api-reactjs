{"version":3,"sources":["components/BodySimpleCard.js","components/SimpleCard.js","components/WorldCard.js","App.js","index.js"],"names":["props","dotsNumber","number","toString","replace","className","dataProps","latest","confirmed","deaths","province","country_population","useState","countryData","setCountryData","country","length","country_code","BodySimpleCard","date","onlyDate","slice","year","month","formatDateString","locations","last_updated","App","newData","setNewData","loading","setLoading","loopSize","setLoopSize","useEffect","axios","method","url","then","res","data","href","cardsDivs","i","push","key","Object","values","sort","a","b","generateCardDivs","onClick","target","rel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAEe,G,YAAA,SAACA,GAEd,SAASC,EAAWC,GAElB,OAAkB,OAAXA,EACHA,EAAOC,WAAWC,QAAQ,wBAAyB,KACnD,IAGR,OAEA,yBAAKC,UAAU,YACf,2BACE,2CACCJ,EAAWD,EAAMM,UAAUC,OAAOC,YAErC,6BACA,2BACE,4CADF,IAC6BP,EAAWD,EAAMM,UAAUC,OAAOE,SAEjC,KAA7BT,EAAMM,UAAUI,UACf,oCACE,6BACA,2BACE,qDACCT,EAAWD,EAAMM,UAAUK,sBAMlC,6BAC8B,KAA7BX,EAAMM,UAAUI,UACf,2BACE,kDACCT,EAAWD,EAAMM,UAAUI,cCjCjB,WAACV,GAAW,IAAD,EACcY,oBAAS,GADvB,mBACjBC,EADiB,KACJC,EADI,KAKxB,OACE,yBAAKT,UAAU,eACXQ,GAAeC,EAAed,EAAMM,WAErCO,GACC,oCACE,yBAAKR,UAAU,cACZQ,EAAYE,QAAQC,OAAS,GAC5B,4BACGH,EAAYE,QADf,KAC0BF,EAAYI,aADtC,KAIA,4BACGJ,EAAYE,QADf,KAC0BF,EAAYI,aADtC,MAMJ,kBAACC,EAAD,CAAgBZ,UAAWO,OCxBtB,G,MAAA,SAACb,GAUd,SAASC,EAAWC,GAClB,OAAkB,OAAXA,EACHA,EAAOC,WAAWC,QAAQ,wBAAyB,KACnD,IAGR,OACE,yBAAKC,UAAU,gBACf,qCACA,2BACE,uDACCJ,EAAWD,EAAMM,UAAUC,OAAOC,YAErC,2BACE,2CADF,IAC4BP,EAAWD,EAAMM,UAAUC,OAAOE,SAE9D,2BACE,iEAzBF,SAA0BU,GACxB,IAAIC,EAAWD,EAAKE,MAAM,GAAI,IAC1BC,EAAOF,EAASC,MAAM,GAAI,GAC1BE,EAAQH,EAASC,MAAM,GAAI,GAE/B,OADUD,EAASC,MAAM,EAAG,IACf,IAAME,EAAQ,IAAMD,EAqBhCE,CAAiBxB,EAAMM,UAAUmB,UAAU,GAAGC,kBC6CpCC,MAtEf,WAAgB,IAAD,EACiBf,oBAAS,GAD1B,mBACNgB,EADM,KACGC,EADH,OAEiBjB,oBAAS,GAF1B,mBAENkB,EAFM,KAEGC,EAFH,OAGmBnB,mBAAS,GAH5B,mBAGNoB,EAHM,KAGIC,EAHJ,KAuCb,OAlCAC,qBAAU,WACRC,IAAM,CACJC,OAAQ,MACRC,IAAK,gFACJC,MAAK,SAACC,GACPV,EAAWU,EAAIC,MACfT,GAAW,QAEZ,IA2BD,yBAAK1B,UAAU,OACb,gCACA,uBAAGoC,KAAK,KAAI,4BAAI,mCAAJ,WAGVX,GAGE,yBAAKzB,UAAU,YAAW,8BAAW,8BAAW,gCAElDyB,GAEA,oCACA,kBAAC,EAAD,CAAUxB,UAAWsB,IAErB,yBAAKvB,UAAU,SA7BrB,WAGE,IAFA,IAAIqC,EAAY,GAEPC,EAAI,EAAGA,EAAIX,EAAUW,IAC5BD,EAAUE,KACR,kBAAC,EAAD,CAASC,IAAKF,EAAGrC,UAddwC,OAAOC,OAAOnB,EAAQH,WAAWuB,MAAK,SAACC,EAAGC,GAAJ,OAC3CD,EAAE1C,OAAOC,UAAY0C,EAAE3C,OAAOC,UAAY,GAAK,KAaImC,MAIrD,OAAOD,EAoBqBS,KAI1B,yBAAK9C,UAAU,iBACZ2B,EAAW,MAAmB,IAAZJ,GACjB,4BACEwB,QAxCV,WACMpB,EAAW,EAAIJ,EAAQH,UAAUT,QAAQiB,EAAYD,EAAW,KAsC9D,MAIJ,gCAAQ,+CAAoB,uBAAGqB,OAAO,SAASC,IAAI,sBAAsBb,KAAK,iCAAlD,mBCjElCc,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.fd53d521.chunk.js","sourcesContent":["import React from 'react';\n\nexport default (props) => {\n\n  function dotsNumber(number) {\n    // Adicionar pontos aos números\n    return number !== null\n      ? number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.')\n      : '?';\n  }\n\nreturn(\n\n<div className=\"bodyCard\">\n<p>\n  <strong>Casos: </strong>\n  {dotsNumber(props.dataProps.latest.confirmed)}\n</p>\n<br />\n<p>\n  <strong>Mortes: </strong> {dotsNumber(props.dataProps.latest.deaths)}\n</p>\n{props.dataProps.province === '' ? (\n  <>\n    <br />\n    <p>\n      <strong>População: </strong>\n      {dotsNumber(props.dataProps.country_population)}\n    </p>\n  </>\n) : (\n  false\n)}\n<br />\n{props.dataProps.province !== '' ? (\n  <p>\n    <strong>Província: </strong>\n    {dotsNumber(props.dataProps.province)}\n  </p>\n) : (\n  false\n)}\n</div>\n)\n}\n","import React, { useState } from 'react';\n\nimport './SimpleCard.css';\nimport BodySimpleCard from \"./BodySimpleCard\";\nexport default (props) => {\n  const [countryData, setCountryData] = useState(false);\n\n\n\n  return (\n    <div className=\"simpleCard\">\n      {!countryData && setCountryData(props.dataProps)}\n\n      {countryData /* Evita que chame locations undefined */ && (\n        <>\n          <div className=\"headerCard\">\n            {countryData.country.length < 12 ? (\n              <h2>\n                {countryData.country} ({countryData.country_code})\n              </h2>\n            ) : (\n              <h3>\n                {countryData.country} ({countryData.country_code})\n              </h3>\n            )}\n          </div>\n\n          <BodySimpleCard dataProps={countryData}></BodySimpleCard>\n        </>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport \"./WorldCard.css\"\n\nexport default (props) => {\n\n  function formatDateString(date) {\n    let onlyDate = date.slice(0, -17);\n    let year = onlyDate.slice(0, -6);\n    let month = onlyDate.slice(5, -3);\n    let day = onlyDate.slice(8, 10);\n    return day + '/' + month + '/' + year;\n  }\n\n  function dotsNumber(number) {\n    return number !== null\n      ? number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.')\n      : '?';\n  }\n\nreturn(\n  <div className=\"displayWorld\">\n  <h2>Mundo</h2>\n  <p>\n    <strong>Casos confirmados: </strong>\n    {dotsNumber(props.dataProps.latest.confirmed)}\n  </p>\n  <p>\n    <strong>Mortes:</strong> {dotsNumber(props.dataProps.latest.deaths)}\n  </p>\n  <p>\n    <strong>Última atualização: </strong>\n    {formatDateString(props.dataProps.locations[0].last_updated)}\n  </p>\n</div>\n)\n}\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport './App.css';\nimport Display from './components/SimpleCard';\nimport WordCard from \"./components/WorldCard\"\nfunction App() {\n  const [newData, setNewData] = useState(false); // Recebe novos dados\n  const [loading, setLoading] = useState(true); // O dados estão carregando?\n  const [loopSize, setLoopSize] = useState(8); // Quantos cards serão carregados\n\n  useEffect(() => {\n    axios({\n      method: 'GET',\n      url: 'https://cors-anywhere.herokuapp.com/http://covid19api.xapix.io/v2/locations',\n    }).then((res) => {\n      setNewData(res.data);\n      setLoading(false); // Não está mais carregando\n    });\n  }, []);\n\n\n  function sortLocationsArray() {\n    return Object.values(newData.locations).sort((a, b) =>\n      a.latest.confirmed < b.latest.confirmed ? 1 : -1\n    );\n  }\n\n  function incLoopSize() {\n    if (loopSize + 8 < newData.locations.length) setLoopSize(loopSize + 8);\n  }\n\n  function generateCardDivs() {\n    var cardsDivs = [];\n\n    for (let i = 0; i < loopSize; i++) {\n      cardsDivs.push(\n        <Display key={i} dataProps={sortLocationsArray()[i]}></Display>\n      );\n    }\n\n    return cardsDivs;\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header>\n      <a href=\"/\"><h1><p>data</p>COVID</h1></a>\n      </header>\n      {\n        loading &&\n        /* Tela de carregamento */\n        /* https://loading.io */\n          <div className=\"lds-ring\"><div></div><div></div><div></div></div>\n      }\n      {!loading && (\n        /* Carregou */\n        <>\n        <WordCard dataProps={newData}></WordCard>\n\n        <div className=\"cards\">{generateCardDivs() /* All Cards */}</div>\n        </>\n      )}\n\n      <div className=\"buttonPlusDiv\">\n        {loopSize < 260 && newData !== false? (\n          <button\n            onClick={incLoopSize}>+</button>) : (false)}\n      </div>\n\n      <footer><p>Desenvolvido por <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/Lukenoutte\">@Lukenoutte</a></p></footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\";\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}